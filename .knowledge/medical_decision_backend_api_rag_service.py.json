{"is_source_file": true, "format": "Python", "description": "This file defines a retrieval-augmented generation (RAG) service component for a medical decision support system. It includes classes for document embedding, indexing, querying, and synthesizing recommendations based on local document storage. The code handles optional dependencies (faiss and chromadb), loads documents (TXT and JSONL), and provides methods for querying and generating summarized guidance.", "external_files": ["faiss", "chromadb", "os", "json"], "external_methods": ["os.getenv", "os.listdir", "os.path.join", "os.path.isdir", "open", "json.loads"], "published": ["RAGIndex", "compose_recommendation"], "classes": [{"name": "SimpleEmbedder", "description": "A minimal embedding class that generates vector representations by hashing character codes; intended as a placeholder for a proper embedding model."}, {"name": "RAGIndex", "description": "A class for loading, indexing, and querying documents related to the medical domain, supporting in-memory and optional FAISS/Chroma backends."}], "methods": [{"name": "encode(self, text: str)", "description": "Converts a text string into a 128-dimensional vector using a naive hashing-based approach.", "scope": "SimpleEmbedder", "scopeKind": "class"}, {"name": "List[Dict] query(self, question: str, top_k: int = 4)", "description": "Performs semantic search over the loaded documents and returns the top_k relevant documents.", "scope": "RAGIndex", "scopeKind": "class"}, {"name": "Tuple[str,List[Dict]] compose_recommendation(question: str, hits: List[Dict])", "description": "Synthesizes a guidance recommendation based on retrieved documents, providing a summarized answer and citations.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, base_dir: str)", "scope": "RAGIndex", "scopeKind": "class", "description": "unavailable"}, {"name": "_add_doc(self, doc: Dict)", "scope": "RAGIndex", "scopeKind": "class", "description": "unavailable"}, {"name": "_load_documents(self)", "scope": "RAGIndex", "scopeKind": "class", "description": "unavailable"}, {"name": "float _score(self, vq, vd)", "scope": "RAGIndex", "scopeKind": "class", "description": "unavailable"}], "calls": ["os.getenv", "os.listdir", "os.path.join", "os.path.isdir", "open", "json.loads"], "search-terms": ["medical documents index", "RAG medical backend", "in-memory document search", "medical guidance retrieval", "txt and jsonl document loader", "semantic search index"], "state": 2, "file_id": 21, "knowledge_revision": 43, "git_revision": "", "ctags": [{"_type": "tag", "name": "CHROMA_AVAILABLE", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    CHROMA_AVAILABLE = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CHROMA_AVAILABLE", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    CHROMA_AVAILABLE = True$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "FAISS_AVAILABLE", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    FAISS_AVAILABLE = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "FAISS_AVAILABLE", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    FAISS_AVAILABLE = True$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RAGIndex", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^class RAGIndex:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SimpleEmbedder", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^class SimpleEmbedder:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def __init__(self, base_dir: str):$/", "language": "Python", "kind": "member", "signature": "(self, base_dir: str)", "scope": "RAGIndex", "scopeKind": "class"}, {"_type": "tag", "name": "_add_doc", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def _add_doc(self, doc: Dict):$/", "language": "Python", "kind": "member", "signature": "(self, doc: Dict)", "scope": "RAGIndex", "scopeKind": "class"}, {"_type": "tag", "name": "_load_documents", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def _load_documents(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RAGIndex", "scopeKind": "class"}, {"_type": "tag", "name": "_score", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def _score(self, vq, vd) -> float:$/", "language": "Python", "typeref": "typename:float", "kind": "member", "signature": "(self, vq, vd)", "scope": "RAGIndex", "scopeKind": "class"}, {"_type": "tag", "name": "compose_recommendation", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^def compose_recommendation(question: str, hits: List[Dict]) -> Tuple[str, List[Dict]]:$/", "language": "Python", "typeref": "typename:Tuple[str,List[Dict]]", "kind": "function", "signature": "(question: str, hits: List[Dict])"}, {"_type": "tag", "name": "dim", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    dim = 128$/", "language": "Python", "kind": "variable", "scope": "SimpleEmbedder", "scopeKind": "class"}, {"_type": "tag", "name": "encode", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def encode(self, text: str):$/", "language": "Python", "kind": "member", "signature": "(self, text: str)", "scope": "SimpleEmbedder", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/medical-decision-support-system-2889-2898/medical_decision_backend/api/rag_service.py", "pattern": "/^    def query(self, question: str, top_k: int = 4) -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "member", "signature": "(self, question: str, top_k: int = 4)", "scope": "RAGIndex", "scopeKind": "class"}], "hash": "15ef0860c437db837c720e7f5a937610", "format-version": 4, "code-base-name": "medical_decision_backend", "filename": "medical_decision_backend/api/rag_service.py", "fields": [{"name": "CHROMA_AVAILABLE = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CHROMA_AVAILABLE = True", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FAISS_AVAILABLE = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FAISS_AVAILABLE = True", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dim = 128", "scope": "SimpleEmbedder", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"43": ""}]}